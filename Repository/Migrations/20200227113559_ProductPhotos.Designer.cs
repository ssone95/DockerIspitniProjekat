// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200227113559_ProductPhotos")]
    partial class ProductPhotos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Discount")
                        .HasColumnType("integer");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(293),
                            Description = "Opis 1",
                            Discount = 0,
                            Identifier = new Guid("396cab4c-15a2-4bac-a9b9-250c41e8fe5a"),
                            Name = "Artikal 1",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(296)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(3148),
                            Description = "<i><b>Opis</b></i> 2",
                            Discount = 1,
                            Identifier = new Guid("f14479e5-bd5b-44c6-8574-b093f77dff83"),
                            Name = "Artikal 2",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(3152)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(3261),
                            Description = "Opis 2",
                            Discount = 1,
                            Identifier = new Guid("d6dbd2f3-6af5-4b73-8315-989f8f23ec20"),
                            Name = "Artikal 2",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 366, DateTimeKind.Local).AddTicks(3264)
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductPhoto", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("text");

                    b.Property<bool>("MainPhoto")
                        .HasColumnType("boolean");

                    b.HasKey("ProductId", "PhotoPath");

                    b.ToTable("ProductPhotos");
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentProductTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(2770),
                            Description = "Opis vrste 1",
                            Identifier = new Guid("3c68c977-546d-4834-8499-21fc31b52034"),
                            Name = "Vrsta 1",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(3383)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4198),
                            Description = "Opis vrste 2",
                            Identifier = new Guid("b84db2de-0394-4600-9afd-72433628e8c7"),
                            Name = "Vrsta 2",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4218)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4238),
                            Description = "Opis vrste 3",
                            Identifier = new Guid("a2db4b86-0128-4c3b-b189-54a7377fc8b3"),
                            Name = "Vrsta 3",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4241)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4252),
                            Description = "Opis vrste 4",
                            Identifier = new Guid("8faa0aa5-b2a7-419d-bd32-9d6248caee62"),
                            Name = "Vrsta 4",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4255)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4265),
                            Description = "Opis vrste 5",
                            Identifier = new Guid("4319937e-baef-4930-bd85-a37c8f700e2b"),
                            Name = "Vrsta 5",
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4269)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4933),
                            Description = "Opis Pod vrste 1",
                            Identifier = new Guid("d2a9e796-c9ce-4c89-a0fa-5a41c6b01aab"),
                            Name = "Pod Vrsta 1",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4949)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4978),
                            Description = "Opis Pod vrste 2",
                            Identifier = new Guid("ec86c6da-c5f1-45b6-8984-ee705ea1b75f"),
                            Name = "Pod Vrsta 2",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4982)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4993),
                            Description = "Opis Pod vrste 3",
                            Identifier = new Guid("1c21e5dc-ff2d-4d87-a68d-9730e569a6b6"),
                            Name = "Pod Vrsta 3",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(4996)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(5007),
                            Description = "Opis Pod vrste 4",
                            Identifier = new Guid("815315c2-c280-4b45-94b6-a5cf200c7c87"),
                            Name = "Pod Vrsta 4",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(5010)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(5021),
                            Description = "Opis Pod vrste 5",
                            Identifier = new Guid("d94426d3-fca3-4cbc-bbf5-a4e0335126b5"),
                            Name = "Pod Vrsta 5",
                            ParentProductTypeId = 3,
                            UpdatedAt = new DateTime(2020, 2, 27, 12, 35, 58, 364, DateTimeKind.Local).AddTicks(5024)
                        });
                });

            modelBuilder.Entity("Domain.Products.Product_ProductType", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product_ProductType");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 10
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 6
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 7
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 8
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 9
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 9
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 10
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductPhoto", b =>
                {
                    b.HasOne("Domain.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.HasOne("Domain.Products.ProductType", "ParentProductType")
                        .WithMany("SubTypes")
                        .HasForeignKey("ParentProductTypeId");
                });

            modelBuilder.Entity("Domain.Products.Product_ProductType", b =>
                {
                    b.HasOne("Domain.Products.Product", "Product")
                        .WithMany("Product_ProductTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Products.ProductType", "ProductType")
                        .WithMany("Product_ProductTypes")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
