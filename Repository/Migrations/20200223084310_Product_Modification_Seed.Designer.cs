// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200223084310_Product_Modification_Seed")]
    partial class Product_Modification_Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Discount")
                        .HasColumnType("integer");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 487, DateTimeKind.Local).AddTicks(8004),
                            Description = "Opis 1",
                            Discount = 0,
                            Identifier = new Guid("7c335389-0c88-41ea-9de7-7bdffcb30548"),
                            Name = "Artikal 1",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 487, DateTimeKind.Local).AddTicks(8008)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 488, DateTimeKind.Local).AddTicks(1500),
                            Description = "Opis 2",
                            Discount = 1,
                            Identifier = new Guid("68735fbc-5cd4-4f8b-8407-6cb6d1acb201"),
                            Name = "Artikal 2",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 488, DateTimeKind.Local).AddTicks(1503)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 488, DateTimeKind.Local).AddTicks(1570),
                            Description = "Opis 2",
                            Discount = 1,
                            Identifier = new Guid("f040afb1-154e-4670-9662-d3d19561a30b"),
                            Name = "Artikal 2",
                            Price = 100m,
                            Tags = "Artikal;test;Nesto;Nesto 2;Proba;",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 488, DateTimeKind.Local).AddTicks(1573)
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentProductTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(1217),
                            Description = "Opis vrste 1",
                            Identifier = new Guid("ffbc74d7-8f18-4020-ac63-e8ee26b4ae39"),
                            Name = "Vrsta 1",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(1790)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2417),
                            Description = "Opis vrste 2",
                            Identifier = new Guid("bb3b6af8-0efb-437b-ae74-75b952f4006f"),
                            Name = "Vrsta 2",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2435)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2455),
                            Description = "Opis vrste 3",
                            Identifier = new Guid("26aa3ebc-18d5-41be-9564-5543cbc7d632"),
                            Name = "Vrsta 3",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2459)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2470),
                            Description = "Opis vrste 4",
                            Identifier = new Guid("1549b883-60c8-4d6b-9ef2-bae91a16f3ca"),
                            Name = "Vrsta 4",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2473)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2484),
                            Description = "Opis vrste 5",
                            Identifier = new Guid("755eea30-e157-4b56-9372-adf3e684f7bf"),
                            Name = "Vrsta 5",
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(2487)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3065),
                            Description = "Opis Pod vrste 1",
                            Identifier = new Guid("bf31c4c9-e0a2-4c04-9b7b-3833fdf70448"),
                            Name = "Pod Vrsta 1",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3079)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3110),
                            Description = "Opis Pod vrste 2",
                            Identifier = new Guid("6b98f227-0376-48a5-96b7-7f44119eccd3"),
                            Name = "Pod Vrsta 2",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3114)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3142),
                            Description = "Opis Pod vrste 3",
                            Identifier = new Guid("924edcc6-1611-498f-ad29-fe9fff92dcd1"),
                            Name = "Pod Vrsta 3",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3146)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3158),
                            Description = "Opis Pod vrste 4",
                            Identifier = new Guid("2c4ef978-32b3-44d6-8a0d-0149d5bca4e5"),
                            Name = "Pod Vrsta 4",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3161)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3172),
                            Description = "Opis Pod vrste 5",
                            Identifier = new Guid("95540ee8-d359-450d-ad16-7f62b5a98cec"),
                            Name = "Pod Vrsta 5",
                            ParentProductTypeId = 3,
                            UpdatedAt = new DateTime(2020, 2, 23, 9, 43, 10, 486, DateTimeKind.Local).AddTicks(3176)
                        });
                });

            modelBuilder.Entity("Domain.Products.Product_ProductType", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Product_ProductType");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 10
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 6
                        },
                        new
                        {
                            ProductId = 1,
                            ProductTypeId = 7
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 8
                        },
                        new
                        {
                            ProductId = 2,
                            ProductTypeId = 9
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 9
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            ProductTypeId = 10
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.HasOne("Domain.Products.ProductType", "ParentProductType")
                        .WithMany("SubTypes")
                        .HasForeignKey("ParentProductTypeId");
                });

            modelBuilder.Entity("Domain.Products.Product_ProductType", b =>
                {
                    b.HasOne("Domain.Products.Product", "Product")
                        .WithMany("Product_ProductTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Products.ProductType", "ProductType")
                        .WithMany("Product_ProductTypes")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
