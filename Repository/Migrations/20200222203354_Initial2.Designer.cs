// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200222203354_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Discount")
                        .HasColumnType("integer");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 247, DateTimeKind.Local).AddTicks(9923),
                            Description = "Opis 1",
                            Discount = 0,
                            Identifier = new Guid("1b11aa91-3013-4281-9840-9a293cd896b1"),
                            Name = "Artikal 1",
                            Price = 100m,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 247, DateTimeKind.Local).AddTicks(9927)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 248, DateTimeKind.Local).AddTicks(2068),
                            Description = "Opis 2",
                            Discount = 1,
                            Identifier = new Guid("f91a9c3c-447e-4cc6-8f51-e6778078aab0"),
                            Name = "Artikal 2",
                            Price = 100m,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 248, DateTimeKind.Local).AddTicks(2072)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 248, DateTimeKind.Local).AddTicks(2129),
                            Description = "Opis 2",
                            Discount = 1,
                            Identifier = new Guid("3eead302-98d7-4828-9636-b823c327d7e6"),
                            Name = "Artikal 2",
                            Price = 100m,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 248, DateTimeKind.Local).AddTicks(2133)
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentProductTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentProductTypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(3671),
                            Description = "Opis vrste 1",
                            Identifier = new Guid("5eb8e21c-f9ab-431f-8840-17a7865e43a7"),
                            Name = "Vrsta 1",
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4237)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4870),
                            Description = "Opis vrste 2",
                            Identifier = new Guid("386fb8ea-5cf9-4006-84fa-fd319d1090d1"),
                            Name = "Vrsta 2",
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4896)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4915),
                            Description = "Opis vrste 3",
                            Identifier = new Guid("2f9b592e-8d0a-4084-9677-50d5585cadf7"),
                            Name = "Vrsta 3",
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4919)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4930),
                            Description = "Opis vrste 4",
                            Identifier = new Guid("cb5e6388-defb-45ec-a823-64812a1d756c"),
                            Name = "Vrsta 4",
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4933)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4944),
                            Description = "Opis vrste 5",
                            Identifier = new Guid("229405a9-0ff5-417b-9d01-6832c86f1079"),
                            Name = "Vrsta 5",
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(4947)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5534),
                            Description = "Opis Pod vrste 1",
                            Identifier = new Guid("9ee843ef-77b9-45fb-9da9-21ea91117917"),
                            Name = "Pod Vrsta 1",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5551)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5582),
                            Description = "Opis Pod vrste 2",
                            Identifier = new Guid("8c6ae88e-e69d-43b7-8681-5df117d8c431"),
                            Name = "Pod Vrsta 2",
                            ParentProductTypeId = 1,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5586)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5597),
                            Description = "Opis Pod vrste 3",
                            Identifier = new Guid("23ca63b1-df95-4b45-b2d9-a92614be8468"),
                            Name = "Pod Vrsta 3",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5600)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5619),
                            Description = "Opis Pod vrste 4",
                            Identifier = new Guid("4a9255f7-5fe8-43d1-bac5-c7d83a0b5546"),
                            Name = "Pod Vrsta 4",
                            ParentProductTypeId = 2,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5623)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5634),
                            Description = "Opis Pod vrste 5",
                            Identifier = new Guid("f757819c-51ff-43f9-924c-bba15074612b"),
                            Name = "Pod Vrsta 5",
                            ParentProductTypeId = 3,
                            UpdatedAt = new DateTime(2020, 2, 22, 21, 33, 54, 246, DateTimeKind.Local).AddTicks(5637)
                        });
                });

            modelBuilder.Entity("Domain.Products.ProductType", b =>
                {
                    b.HasOne("Domain.Products.ProductType", "ParentProductType")
                        .WithMany("SubTypes")
                        .HasForeignKey("ParentProductTypeId");

                    b.HasOne("Domain.Products.Product", null)
                        .WithMany("ProductTypes")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
